*gruvbox-material.txt*     Gruvbox with Material Palette

CONTENTS                                     *gruvbox-material-contents*

Introduction                                 |gruvbox-material-introduction|
Installation                                 |gruvbox-material-installation|
Usage                                        |gruvbox-material-usage|
Configuration                                |gruvbox-material-configuration|
FAQ                                          |gruvbox-material-faq|

Note: Type |gO| to show the outline of contents.

==============================================================================
INTRODUCTION                                     *gruvbox-material-introduction*

Gruvbox Material is a modified version of Gruvbox, the contrast is adjusted to
be softer in order to protect developers' eyes.

There are 3 palettes available in this color scheme:

- `material`: Carefully designed to have a soft contrast.
- `mix`: Color palette obtained by calculating the mean of the other two.
- `original`: The color palette used in the original gruvbox.

This color scheme uses the `material` palette by default, you can use
|g:gruvbox_material_palette| to switch to another palette.

Features~

- Carefully designed color palette for eye protection.
- Switch back to the original color palette whenever you like.
- Highly customizable.
- Rich support for common file types and plugins.
- Semantic highlighting support.
- Tree-sitter support.
- Italic support ðŸŽ‰

==============================================================================
INSTALLATION                                     *gruvbox-material-installation*

------------------------------------------------------------------------------

Via Plugin Manager~

    Take [vim-plug](https://github.com/junegunn/vim-plug) for example:
>
        Plug 'sainnhe/gruvbox-material'
<
    For better syntax highlighting support, please install
    https://github.com/sheerun/vim-polyglot or https://github.com/nvim-treesitter/nvim-treesitter.

------------------------------------------------------------------------------

Via Pack Feature~

    1. Create a new directory: `$ mkdir -p ~/.vim/pack/colors/opt`

    2. Clone this repository: `$ git clone --depth 1 https://github.com/sainnhe/gruvbox-material.git ~/.vim/pack/colors/opt/gruvbox-material`

    3. Generate help tags: `:helptags ~/.vim/pack/colors/opt/gruvbox-material/doc/`

    4. Add `packadd! gruvbox-material` to your vimrc.

Note: If you install this color scheme to `pack/*/start`, you still need to add `packadd! gruvbox-material` to your vimrc. [sainnhe/gruvbox-material#60](https://github.com/sainnhe/gruvbox-material/issues/60)

------------------------------------------------------------------------------

Manually~

    1. Clone the repository: `git clone --depth 1 https://github.com/sainnhe/gruvbox-material.git`

    2. Copy `/path/to/gruvbox-material/autoload/gruvbox_material.vim` to
    `~/.vim/autoload/`.

    3. Copy `/path/to/gruvbox-material/colors/gruvbox-material.vim` to
    `~/.vim/colors/` .

    4. Copy `/path/to/gruvbox-material/doc/gruvbox-material.txt` to
    `~/.vim/doc/` and execute `:helptags ~/.vim/doc/` to generate help tags.

    5. To install [airline](https://github.com/vim-airline/vim-airline) theme,
    copy `/path/to/gruvbox-material/autoload/airline/themes/gruvbox_material.vim`
    to `~/.vim/autoload/airline/themes/` .

    6. To install [lightline](https://github.com/itchyny/lightline.vim) theme,
    copy `/path/to/gruvbox-material/autoload/lightline/colorscheme/gruvbox_material.vim`
    to `~/.vim/autoload/lightline/colorscheme/` .

------------------------------------------------------------------------------

AUR~

    There are some packages available for Arch Linux users in AUR:

    - [vim-gruvbox-material-git](https://aur.archlinux.org/pkgbase/vim-gruvbox-material-git/)
    - [neovim-gruvbox-material-git](https://aur.archlinux.org/pkgbase/neovim-gruvbox-material-git/)

==============================================================================
USAGE                                                   *gruvbox-material-usage*

------------------------------------------------------------------------------

Vim~

    Put something like this in your vimrc:
>
        " Important!!
        if has('termguicolors')
          set termguicolors
        endif

        " For dark version.
        set background=dark

        " For light version.
        set background=light

        " Set contrast.
        " This configuration option should be placed before `colorscheme gruvbox-material`.
        " Available values: 'hard', 'medium'(default), 'soft'
        let g:gruvbox_material_background = 'soft'

        colorscheme gruvbox-material
<
    See |gruvbox-material-configuration| for more configuration options.

    If you want to apply this color scheme temporarily, run this command in
    vim(this may cause broken colors):
>
        :colorscheme gruvbox-material
<
------------------------------------------------------------------------------

Airline~

    To enable [airline](https://github.com/vim-airline/vim-airline) color
    scheme, put this in your vimrc:
>
        let g:airline_theme = 'gruvbox_material'
<
    To apply it without reloading:
>
        :AirlineTheme gruvbox_material
<
------------------------------------------------------------------------------

Lightline~

    To enable [lightline](https://github.com/itchyny/lightline.vim) color
    scheme, put this in your vimrc:
>
        let g:lightline = {}
        let g:lightline.colorscheme = 'gruvbox_material'

        " Or this line:
        let g:lightline = {'colorscheme' : 'gruvbox_material'}
<
    To apply it without reloading:
>
        :let g:lightline.colorscheme = 'gruvbox_material'
        :call lightline#init()
        :call lightline#colorscheme()
<
==============================================================================
CONFIGURATION                                   *gruvbox-material-configuration*

Note: the configuration options should be placed before `colorscheme gruvbox-material`

E.g.
>
    if has('termguicolors')
      set termguicolors
    endif
    set background=light

    let g:gruvbox_material_background = 'soft'
    let g:gruvbox_material_enable_italic = 1
    let g:gruvbox_material_disable_italic_comment = 1

    colorscheme gruvbox_material
    let g:lightline.colorscheme = 'gruvbox_material'
<
------------------------------------------------------------------------------
                                                 *g:gruvbox_material_background*
g:gruvbox_material_background~

The background contrast used in this color scheme.

    Available values: `'hard'`, `'medium'`, `'soft'`
    Default value: `'medium'`

E.g.
>
    let g:gruvbox_material_background = 'hard'
<
------------------------------------------------------------------------------
                                     *g:gruvbox_material_disable_italic_comment*
g:gruvbox_material_disable_italic_comment~

By default, italic is enabled in `Comment`. To disable italic in `Comment`, set
this option to `1`.

E.g.
>
    let g:gruvbox_material_disable_italic_comment = 1
<
------------------------------------------------------------------------------
                                                *g:gruvbox_material_enable_bold*
g:gruvbox_material_enable_bold~

To enable bold in function name just like the original gruvbox, set this
option to `1`.

E.g.
>
    let g:gruvbox_material_enable_bold = 1
<
------------------------------------------------------------------------------
                                              *g:gruvbox_material_enable_italic*
g:gruvbox_material_enable_italic~

To enable italic in this color scheme, set this option to `1`.

E.g.
>
    let g:gruvbox_material_enable_italic = 1
<
Note: This option is designed to use with fonts that support cursive italics.
See |gruvbox-material-faq| for more information.

------------------------------------------------------------------------------
                                                     *g:gruvbox_material_cursor*
g:gruvbox_material_cursor~

Customize the cursor color, only works in GUI clients.

    Available values: `'auto'`, `'red'`, `'orange'`, `'yellow'`, `'green'`,
    `'aqua'`, `'blue'`, `'purple'`
    Default value: `'auto'`

E.g.
>
    let g:gruvbox_material_cursor = 'green'
<
------------------------------------------------------------------------------
                                     *g:gruvbox_material_transparent_background*
g:gruvbox_material_transparent_background~

To use transparent background, set this option to `1`.

E.g.
>
    let g:gruvbox_material_transparent_background = 1
<
------------------------------------------------------------------------------
                                                     *g:gruvbox_material_visual*
g:gruvbox_material_visual~

Control the |hl-Visual| and the |hl-VisualNOS| highlight group.

    Available values: `'grey background'`, `'green background'`,
    `'blue background'`, `'red background'`, `'reverse'`
    Default value: `'grey background'`

E.g.
>
    let g:gruvbox_material_visual = 'reverse'
<
------------------------------------------------------------------------------
                                  *g:gruvbox_material_menu_selection_background*
g:gruvbox_material_menu_selection_background~

Customize the background color of |hl-PmenuSel| and |hl-WildMenu|.

    Available values: `'grey'`, `'red'`, `'orange'`, `'yellow'`, `'green'`,
    `'aqua'`, `'blue'`, `'purple'`
    Default value: `'grey'`

E.g.
>
    let g:gruvbox_material_menu_selection_background = 'green'
<
------------------------------------------------------------------------------
                                     *g:gruvbox_material_sign_column_background*
g:gruvbox_material_sign_column_background~

By default, the background color of sign column is different from normal text.
If you want to make it the same as normal text, set this option to `'none'`.

    Available values: `'default'`, `'none'`
    Default value: `'default'`

E.g.
>
    let g:gruvbox_material_sign_column_background = 'none'
<
------------------------------------------------------------------------------
                                                *g:gruvbox_material_ui_contrast*
g:gruvbox_material_ui_contrast~

The contrast of line numbers, indent lines, etc.

    Available values: `'low'`, `'high'`
    Default value: `'low'`

E.g.
>
    let g:gruvbox_material_ui_contrast = 'high'
<
------------------------------------------------------------------------------
                                                   *g:gruvbox_material_show_eob*
g:gruvbox_material_show_eob~

Whether to show |hl-EndOfBuffer|.

    Available values: `1`, `0`
    Default value: `1`

E.g.
>
    let g:gruvbox_material_show_eob = 0
<
------------------------------------------------------------------------------
                                  *g:gruvbox_material_diagnostic_text_highlight*
g:gruvbox_material_diagnostic_text_highlight~

Some plugins support highlighting error/warning/info/hint texts, by default
these texts are only underlined, but you can use this option to also highlight
the background of them.

    Available values: `0`, `1`
    Default value: `0`

E.g.
>
    let g:gruvbox_material_diagnostic_text_highlight = 1
<
Currently, the following plugins are supported:

- neovim's built-in language server client
- https://github.com/neoclide/coc.nvim
- https://github.com/prabirshrestha/vim-lsp
- https://github.com/ycm-core/YouCompleteMe
- https://github.com/dense-analysis/ale
- https://github.com/neomake/neomake
- https://github.com/vim-syntastic/syntastic

------------------------------------------------------------------------------
                                  *g:gruvbox_material_diagnostic_line_highlight*
g:gruvbox_material_diagnostic_line_highlight~

Some plugins support highlighting error/warning/info/hint lines, but this
feature is disabled by default in this color scheme. To enable this feature,
set this option to `1`.

E.g.
>
    let g:gruvbox_material_diagnostic_line_highlight = 1
<
Currently, the following plugins are supported:

- https://github.com/neoclide/coc.nvim
- https://github.com/ycm-core/YouCompleteMe
- https://github.com/dense-analysis/ale
- https://github.com/vim-syntastic/syntastic

------------------------------------------------------------------------------
                                    *g:gruvbox_material_diagnostic_virtual_text*
g:gruvbox_material_diagnostic_virtual_text~

Some plugins can use virtual text feature of neovim to display
error/warning/info/hint information, you can use this option to adjust the
colors of it.

    Available values: `'grey'`, `'colored'`
    Default value: `'grey'`

E.g.
>
    let g:gruvbox_material_diagnostic_virtual_text = 'colored'
<
Currently, the following plugins are supported:

- neovim's built-in language server client
- https://github.com/neoclide/coc.nvim
- https://github.com/prabirshrestha/vim-lsp
- https://github.com/dense-analysis/ale
- https://github.com/neomake/neomake

------------------------------------------------------------------------------
                                               *g:gruvbox_material_current_word*
g:gruvbox_material_current_word~

Some plugins can highlight the word under current cursor, you can use this
option to control their behavior.

    Available values: `'grey background'`, `'bold'`, `'underline'`, `'italic'`
    Default value: `'grey background'` when not in transparent mode, `'bold'`
    when in transparent mode.

E.g.
>
    let g:gruvbox_material_current_word = 'bold'
<
Currently, the following plugins are supported:

- https://github.com/neoclide/coc-highlight
- https://github.com/dominikduda/vim_current_word
- https://github.com/RRethy/vim-illuminate
- https://github.com/itchyny/vim-cursorword
- https://github.com/prabirshrestha/vim-lsp

------------------------------------------------------------------------------
                                           *g:gruvbox_material_statusline_style*
g:gruvbox_material_statusline_style~

Determine the style of statusline/airline/lightline.

There are 3 designs for statusline:

- `default`: See the screenshots.
- `mix`: Combines `default` and `original`.
- `original`: The design used in the original gruvbox.

    Available values: `'default'`, `'mix'`, `'original'`
    Default value: `'default'`

E.g.
>
    let g:gruvbox_material_statusline_style = 'original'
<
------------------------------------------------------------------------------
                                     *g:gruvbox_material_lightline_disable_bold*
g:gruvbox_material_lightline_disable_bold~

By default, bold is enabled in lightline color scheme. To disable bold in
lightline color scheme, set this option to `1`.

E.g.
>
    let g:gruvbox_material_lightline_disable_bold = 1
<
Note: this configuration option doesn't need to be placed before `colorscheme gruvbox-material`

------------------------------------------------------------------------------
                                         *g:gruvbox_material_better_performance*
g:gruvbox_material_better_performance~

The loading time of this color scheme is very long because too many file types
and plugins are optimized. This feature allows you to load part of the code on
demand by placing them in the `after/ftplugin` directory.

Enabling this option will reduce loading time by approximately 50%.

E.g.
>
    let g:gruvbox_material_better_performance = 1
<
------------------------------------------------------------------------------
                                                    *g:gruvbox_material_palette*
g:gruvbox_material_palette~

All the colors in this color scheme are fully controlled by this variable, you
can set them to whatever you like through it.

There are 3 built-in palettes:

- `material`: Carefully designed to have a soft contrast.
- `mix`: Color palette obtained by calculating the mean of the other two.
- `original`: The color palette used in the original gruvbox.

    Available values: `'material'`, `'mix'`, `'original'` or a custom palette
    Default value: `'material'`

E.g.
>
    " Use the color palette of the original gruvbox.
    let g:gruvbox_material_palette = 'original'

    " If you prefer a darker background, for example: '#101010'.
    " See `autoload/gruvbox_material.vim` for the definition of all built-in palettes.
    " {{{
    let g:gruvbox_material_palette = {
          \ 'bg0':              ['#101010',   '234'],
          \ 'bg1':              ['#262727',   '235'],
          \ 'bg2':              ['#282828',   '235'],
          \ 'bg3':              ['#3c3836',   '237'],
          \ 'bg4':              ['#3c3836',   '237'],
          \ 'bg5':              ['#504945',   '239'],
          \ 'bg_statusline1':   ['#282828',   '235'],
          \ 'bg_statusline2':   ['#32302f',   '235'],
          \ 'bg_statusline3':   ['#504945',   '239'],
          \ 'bg_diff_green':    ['#32361a',   '22'],
          \ 'bg_visual_green':  ['#333e34',   '22'],
          \ 'bg_diff_red':      ['#3c1f1e',   '52'],
          \ 'bg_visual_red':    ['#442e2d',   '52'],
          \ 'bg_diff_blue':     ['#0d3138',   '17'],
          \ 'bg_visual_blue':   ['#2e3b3b',   '17'],
          \ 'bg_visual_yellow': ['#473c29',   '94'],
          \ 'bg_current_word':  ['#32302f',   '236'],
          \ 'fg0':              ['#d4be98',   '223'],
          \ 'fg1':              ['#ddc7a1',   '223'],
          \ 'red':              ['#ea6962',   '167'],
          \ 'orange':           ['#e78a4e',   '208'],
          \ 'yellow':           ['#d8a657',   '214'],
          \ 'green':            ['#a9b665',   '142'],
          \ 'aqua':             ['#89b482',   '108'],
          \ 'blue':             ['#7daea3',   '109'],
          \ 'purple':           ['#d3869b',   '175'],
          \ 'bg_red':           ['#ea6962',   '167'],
          \ 'bg_green':         ['#a9b665',   '142'],
          \ 'bg_yellow':        ['#d8a657',   '214'],
          \ 'grey0':            ['#7c6f64',   '243'],
          \ 'grey1':            ['#928374',   '245'],
          \ 'grey2':            ['#a89984',   '246'],
          \ 'none':             ['NONE',      'NONE']
          \ }
    " }}}

    " Colors based on https://github.com/soft-aesthetic/soft-era
    " There are some problems in the original one but I'm too lazy to maintain a fork.
    " However, I successfully obtained a palette based on soft-era, and I'd like to share it here.
    " Preview: https://user-images.githubusercontent.com/37491630/82816097-0c76a900-9e8a-11ea-9d99-73573b0f0afb.png
    " {{{
    let g:gruvbox_material_palette = {
          \ 'bg0':              ['#f9f5f5',   '229'],
          \ 'bg1':              ['#f4f0f0',   '228'],
          \ 'bg2':              ['#f4f0f0',   '228'],
          \ 'bg3':              ['#f2edec',   '223'],
          \ 'bg4':              ['#efeae9',   '223'],
          \ 'bg5':              ['#ebe6e4',   '250'],
          \ 'bg_statusline1':   ['#f4f0f0',   '223'],
          \ 'bg_statusline2':   ['#f4f0f0',   '223'],
          \ 'bg_statusline3':   ['#ebe6e4',   '250'],
          \ 'bg_diff_green':    ['#eaf3ce',   '194'],
          \ 'bg_visual_green':  ['#eaf3ce',   '194'],
          \ 'bg_diff_red':      ['#fae1d7',   '217'],
          \ 'bg_visual_red':    ['#fae1d7',   '217'],
          \ 'bg_diff_blue':     ['#e0f0f3',   '117'],
          \ 'bg_visual_blue':   ['#e0f0f3',   '117'],
          \ 'bg_visual_yellow': ['#f6ead0',   '226'],
          \ 'bg_current_word':  ['#efeae9',   '228'],
          \ 'fg0':              ['#be9898',   '237'],
          \ 'fg1':              ['#be9898',   '237'],
          \ 'red':              ['#f165bd',   '88'],
          \ 'orange':           ['#f165bd',   '130'],
          \ 'yellow':           ['#ec9157',   '136'],
          \ 'green':            ['#96ad01',   '100'],
          \ 'aqua':             ['#25b7b8',   '165'],
          \ 'blue':             ['#75a9d9',   '24'],
          \ 'purple':           ['#aea6e1',   '96'],
          \ 'bg_red':           ['#f165bd',   '88'],
          \ 'bg_green':         ['#96ad01',   '100'],
          \ 'bg_yellow':        ['#ec9157',   '130'],
          \ 'grey0':            ['#e3cbcb',   '246'],
          \ 'grey1':            ['#dfc5c5',   '245'],
          \ 'grey2':            ['#dabfbf',   '243'],
          \ 'none':             ['NONE',      'NONE']
          \ }
    " }}}
<
==============================================================================
FAQ                                                       *gruvbox-material-faq*

------------------------------------------------------------------------------

It doesn't work as expected.~

1. This color scheme is mainly designed for true colors, `set termguicolors`
is required. Check output of `vim --version`, maybe your vim doesn't support
`termguicolors`.

2. Maybe your terminal emulator doesn't support true colors, you can test it
using [this script](https://unix.stackexchange.com/questions/404414/print-true-color-24-bit-test-pattern).

3. If you are running vim in tmux, you need to override default true colors of
tmux, as tmux cannot display true colors properly:
[#1246 How to use true colors in vim under tmux?](https://github.com/tmux/tmux/issues/1246)

4. There are many highlight group links in syntax files while a color scheme
may change them, enabling one color scheme based on another color scheme
enabled is very likely to cause colors to break. If any color is broken, you
can enable the color scheme in your vimrc instead of after vim startup.

------------------------------------------------------------------------------

A lot of errors are detected if I install with pack feature.~

You'll need to add `packadd! gruvbox-material` before applying this color
scheme. Check [sainnhe/gruvbox-material#60](https://github.com/sainnhe/gruvbox-material/issues/60)

------------------------------------------------------------------------------

I can't apply airline/lightline color scheme.~

The name is `gruvbox_material` instead of `gruvbox-material`. I have to use
underline for some grammatical reasons.

------------------------------------------------------------------------------

How to enable cursive italic keywords?~

1. Install a font that supports cursive italics, for example [icursive-nerd-font](https://github.com/sainnhe/icursive-nerd-font).

2. Enable italic keywords in this color scheme: `let g:gruvbox_material_enable_italic = 1`

3. Disable italic comment(optional): `let g:gruvbox_material_disable_italic_comment = 1`

------------------------------------------------------------------------------

The comment color looks weird.~

Some terminal emulators don't support italics, which may cause the comment
color looks weird. See https://github.com/sainnhe/gruvbox-material/issues/5#issuecomment-729586348

------------------------------------------------------------------------------

How to use custom colors?~
>
    function! s:gruvbox_material_custom() abort
      " Link a highlight group to a predefined highlight group.
      " See `colors/gruvbox-material.vim` for all predefined highlight groups.
      highlight! link groupA groupB
      highlight! link groupC groupD
    
      " Initialize the color palette.
      " The first parameter is a valid value for `g:gruvbox_material_background`,
      " and the second parameter is a valid value for `g:gruvbox_material_palette`.
      let l:palette = gruvbox_material#get_palette('hard', 'mix')
      " Define a highlight group.
      " The first parameter is the name of a highlight group,
      " the second parameter is the foreground color,
      " the third parameter is the background color,
      " the fourth parameter is for UI highlighting which is optional,
      " and the last parameter is for `guisp` which is also optional.
      " See `autoload/gruvbox_material.vim` for the format of `l:palette`.
      call gruvbox_material#highlight('groupE', l:palette.red, l:palette.none, 'undercurl', l:palette.red)
    endfunction
    
    augroup GruvboxMaterialCustom
      autocmd!
      autocmd ColorScheme gruvbox-material call s:gruvbox_material_custom()
    augroup END
    
    colorscheme gruvbox-material
<
Note: Make sure to define the `augroup` before declare the `colorscheme`.

------------------------------------------------------------------------------

What's your status line configuration?~

See this [article](https://www.sainnhe.dev/post/status-line-config/).

------------------------------------------------------------------------------

What's the font used here?~

[Fira Code iCursive Op](https://github.com/sainnhe/icursive-nerd-font).

==============================================================================
vim:tw=78:nosta:noet:ts=8:sts=0:ft=help:et:sw=4:fen:fdm=marker:fmr={{{,}}}:
